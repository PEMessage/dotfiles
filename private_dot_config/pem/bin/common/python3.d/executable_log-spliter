#!/usr/bin/env python3

import argparse
import re
from pathlib import Path

def split_logfile(input, pattern, output_name_format):
    # Compile the regular expression pattern
    regex = re.compile(pattern)

    # Initialize variables
    output_files = {}  # To track existing files and avoid duplicates
    output_file = None

    # Open the input log file
    with open(input, 'r', encoding='utf-16') as infile:
        for line in infile:
            # Check if the line matches the pattern
            match = regex.match(line)
            if match:
                # Close the previous output file if it's open
                if output_file:
                    output_file.close()

                # Extract the captured group for the output name
                if output_name_format:
                    output_filename = output_name_format.format(*match.groups())

                # Handle duplicate filenames by adding a suffix
                if output_filename in output_files:
                    suffix = output_files[output_filename]
                    output_files[output_filename] += 1
                    output_filename_with_ext = f"{output_filename}_{suffix}.log"
                else:
                    output_files[output_filename] = 1
                    output_filename_with_ext = f"{output_filename}.log"

                # Create a new output file
                output_file = open(output_filename_with_ext, 'w')

            # Write the line to the current output file
            if output_file:
                output_file.write(line)

    # Close the last output file
    if output_file:
        output_file.close()

if __name__ == "__main__":
    # Set up argument parsing
    parser = argparse.ArgumentParser(description="Split a log file based on a pattern.")
    parser.add_argument('-i','--input', required=True, help="Input log file to split.")
    parser.add_argument('-p','--pattern', required=True, help="Pattern to split the log file on.")
    parser.add_argument('-o','--output_name_format', default='default', help="Output filename format, e.g., '{0}.log'.")

    # Parse the arguments
    args = parser.parse_args()

    # Call the split_logfile function with the provided arguments
    split_logfile(args.input, args.pattern, args.output_name_format)

    print("Log file split completed.")
