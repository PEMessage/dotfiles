#!/bin/sh
ff_path() {
    echo $PATH | tr : '\n' | xargs -I{} find {} -maxdepth 1 -type f 2>/dev/null | fzf --query="$1"
}

ff_ffpm(){
    ffpm i "$@"
}

ff_man() {
    for x in 1 2 3 4 5 6 7 8
    do
        LIST="
        $LIST
        $(man --apropos --sections=${x} . 2>/dev/null)
        "
    done

    pagename="$(echo "$LIST" | sed '/^[[:blank:]]*$/d'  | fzf --query="$1" | cut -d ' ' -f 1 )"
    [ ! "$?" -eq 0 ] && exit 0
    [ -z "$pagename" ] && exit 0

    if which vman >/dev/null 2>&1 ; then
        vman $pagename
    else
        man $pagename
    fi
}

ff_include() {
    
    # priority in for loop: low(left) -- hight(right)
    for x in `which gcc 2>/dev/null` `which g++ 2>/dev/null` $@
    do
        local cmd="$x"
    done
    # echo $cmd

    # Credit: qwen2.5-coder:14b 
    #   Q:  g++ how to print default include search path ?
    #   - `-E`: Stop after preprocessing.
    #   - `-x c++`: Treat the input as C++ code (you can use `-x c` if you're working with C code).
    #   - `-v`: Verbose output, showing the search paths for headers.
    #   - `< /dev/null`: Redirects standard input from `/dev/null`,
    #      so `g++` doesn't try to read any actual source file.
    $cmd -E -x c++ -v - < /dev/null 2>&1 |
        awk '
        /search starts here/{ a = 1 ; next }
        /End of search list/{ a = 0 ; next }
        a == 1 {
            gsub(/^[ \t]+|[ \t]+$/, "") ; print $0
        } ' | xargs -I {} find {} -name '*.h' | fzf
}



usage() {
    echo "USAGE:"
    echo "       ff path            : search all path bin"
    echo "       ff man             : alias all of MANPATH"
    echo "       ff [apt|pacman|rpm]: alias of \`ffpm i\`"
    echo "       ff include         : seach g++/gcc default include path"
}


main() {
    case "$1" in
        path)
            shift
            ff_path "$@"
            ;;
        apt|pacman|rpm)
            shift
            ff_ffpm "$@"
            ;;
        man)
            shift
            ff_man "$@"
            ;;
        include)
            shift
            ff_include "$@"
            ;;
        *)
            usage
    esac
}


main "$@"
