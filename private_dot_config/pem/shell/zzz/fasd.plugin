#!/bin/sh
dm(){
    local mark_name
    local prompt_message
    local mark_path
    if [ -n "$2" ] ; then
        mark_name="$1"
        mark_path="$2"
        prompt_message="Mark to $mark_name"

    elif [ -n "$1" ] ; then
        mark_name="$1"
        mark_path=`pwd`
        prompt_message="Mark to $mark_name"
    else
        mark_nane='EMPTY'
        mark_path=`pwd`
        prompt_message='Clean the mark'
    fi
    # echo $local_dir
    fasd --mark  "$mark_path" "$mark_name"
    echo "$mark_path -> $prompt_message "
}

cdd(){
    local fnd="$*"
    [ -d "$fnd" ] && cd "$fnd" && return
    [ -n "$fnd" ] &&  fasd_cd -d "$fnd" && return
    local temp_fasd_data="$(fasd --var _FASD_DATA)"
    if [ -f "$temp_fasd_data" ] ; then
        local temp=` cat "$temp_fasd_data" | cut -d "|" -f 1 |
            fzf  --no-sort --query="$fnd"
            `
        if [ -d "$temp" ] ; then
            cd "$temp"
        elif [ -f "$temp" ] ; then
            cd "$(dirname "$temp")"
        fi
    fi
}
alias ccd='cdd'

# cdt(){
#     local fnd="$*"
#     [ -d "$fnd" ] && cd "$fnd" && return
#     [ -n "$fnd" ] &&  fasd_cd -d "$fnd" && return
#     local temp=` fasd -sdt 2>&1 | sort -rn |
#         awk '{ print substr($0, index($0,$2)) }' |
#         fzf  --no-sort --query="$fnd"
#         `
#     cd "$temp"
# }

cdm() {
    local data="$(cat ~/.cache/pem/fasd/data.txt | awk -F"|" '$4 != "" { print $0 } ')"
    local path="$(echo "$data" |
        awk -F"|" '{printf "%-10s %s\n",$4,$1}' |
        fzf |
        awk '{ print substr($0, index($0,$2)) }'
        )"
    [ -f "$path" ] && cd "$(dirname "$path")" && return
    [ -d "$path" ] && cd "$path" && return
}

vf(){
    # https://github.com/junegunn/fzf/wiki/examples#git
    [ $# -gt 0 ] && fasd -f -e ${EDITOR} "$*" && return
    local file
    file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && vi "${file}" || return 1
}

fcd() {
    fasd -fi "$*" -e "bcd" 
}
